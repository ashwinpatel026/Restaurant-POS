// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String
  lastName  String
  phone     String?
  role      UserRole
  isActive  Boolean  @default(true)
  outletId  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Outlet {
  id          Int      @id @default(autoincrement())
  name        String
  code        String   @unique
  address     String
  city        String
  state       String
  zipCode     String
  phone       String
  email       String
  isActive    Boolean  @default(true)
  openingTime String
  closingTime String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("outlets")
}

model Availability {
  availabilityId Int       @id @default(autoincrement()) @map("availability_id")
  avaiCode       String    @unique @map("avai_code") @db.VarChar(100)
  avaiName       String    @unique @map("avai_name") @db.VarChar(100)
  isActive       Int       @default(1) @map("is_active")
  createdBy      Int?      @map("createdby")
  createdOn      DateTime  @default(now()) @map("createdon")
  isSyncMysql    Int?      @map("is_sync_mysql")
  storeCode      String?   @map("Store_code") @db.VarChar(100)

  // Relationship to schedules
  schedules AvailabilitySchedule[]

  @@map("tbl_availability")
}

model AvailabilitySchedule {
  id          Int       @id @default(autoincrement())
  avaiCode    String    @map("avai_code") @db.VarChar(100)
  dayName     DayName   @map("day_name")
  startTime   DateTime  @map("start_time") @db.Time()
  endTime     DateTime  @map("end_time") @db.Time()
  createdBy   Int?      @map("createdby")
  createdOn   DateTime  @default(now()) @map("createdon")
  isSyncMysql Int?      @map("is_sync_mysql")
  storeCode   String?   @map("Store_code") @db.VarChar(100)

  // Relationship to Availability
  availability Availability @relation(fields: [avaiCode], references: [avaiCode], onDelete: Cascade)

  @@index([avaiCode])
  @@map("tbl_availability_schedule")
}

model PrepStation {
  prepStationId      Int       @id @default(autoincrement()) @map("prep_station_id")
  prepStationCode    String?   @unique @map("prep_station_code") @db.VarChar(100)
  prepStationName    String?   @map("prep_station_name") @db.VarChar(500)
  stationId          Int?      @map("stationid")
  isActive           Int       @default(1) @map("is_active")
  sendToExpediter    Int?      @map("send_to_expediter")
  alwaysPrintTicket  Int?      @map("always_print_ticket")
  printerCode        String?   @map("printer_code") @db.VarChar(100)
  createdBy          Int?      @map("createdby")
  createdOn          DateTime  @default(now()) @map("createdon")
  updatedBy          Int?      @map("updatedby")
  updatedOn          DateTime? @map("updatedon")
  isSyncMysql        Int?      @map("is_sync_mysql")
  storeCode          String?   @map("Store_code") @db.VarChar(100)

  @@map("tbl_prep_station")
}

model MenuMaster {
  tblMenuMasterId   Int       @id @default(autoincrement()) @map("tbl_Menu_Master_Id")
  name              String    @map("Name")
  labelName         String?   @map("label_name")
  colorCode         String?   @map("color_code")
  taxId             Int       @map("tax_id")
  stationGroupId    Int?      @map("station_group_id")
  availabilityId    Int?      @map("availibility_id")
  isActive          Int       @default(1) @map("Is_Active")
  createdBy         Int?      @map("createdby")
  createdOn         DateTime  @default(now()) @map("createdon")
  updatedBy         Int?      @map("updatedby")
  updatedOn         DateTime? @map("updatedon")
  isSyncSqlserver   Int?      @map("is_sync_sqlserver")
  storeCode         String?   @map("Store_code")

  @@map("tbl_Menu_Master")
}

model MenuCategory {
  tblMenuCategoryId Int       @id @default(autoincrement()) @map("tbl_Menu_Category_Id")
  tblMenuMasterId   Int       @map("tbl_Menu_Master_Id")
  name              String    @map("Name")
  colorCode         String?   @map("color_code")
  isActive          Int       @default(1) @map("is_active")
  createdBy         Int?      @map("createdby")
  createdOn         DateTime  @default(now()) @map("createdon")
  isSyncSqlserver   Int?      @map("is_sync_sqlserver")
  storeCode         String?   @map("Store_code")

  @@map("tbl_Menu_Category")
}

model MenuItem {
  tblMenuItemId     Int       @id @default(autoincrement()) @map("tbl_Menu_Item_Id")
  tblMenuCategoryId Int       @map("tbl_Menu_Category_Id")
  name              String    @map("Name")
  labelName         String    @map("label_name")
  colorCode         String?   @map("color_code")
  calories          String?   @map("calories")
  descrip           String?   @map("descrip")
  skuPlu            Int?      @map("sku_plu")
  isAlcohol         Int       @default(0) @map("is_alcohol")
  menuImg           String?   @map("menu_img") // longtext for base64 images
  priceStrategy     Int       @map("price_strategy")
  price             Decimal   @map("Price")
  isActive          Int       @default(1) @map("is_active")
  createdBy         Int?      @map("createdby")
  createdOn         DateTime  @default(now()) @map("createdon")
  isSyncSqlserver   Int?      @map("is_sync_sqlserver")
  storeCode         String?   @map("Store_code")

  @@map("tbl_Menu_Item")
}

model Modifier {
  tblModifierId     Int       @id @default(autoincrement()) @map("tbl_Modifier_Id")
  tblMenuItemId     Int?      @map("tbl_Menu_Item_Id")
  name              String    @map("Name")
  labelName         String    @map("label_name")
  colorCode         String?   @map("color_code")
  priceStrategy     Int       @map("price_strategy")
  price             Decimal?  @map("price")
  required          Int       @map("required")
  isMultiselect     Int       @map("is_multiselect")
  minSelection      Int       @map("min_selection")
  maxSelection      Int       @map("max_selection")
  createdBy         Int?      @map("createdby")
  createdOn         DateTime  @default(now()) @map("createdon")
  isSyncSqlserver   Int?      @map("is_sync_sqlserver")
  storeCode         String?   @map("Store_code")

  // Relationship to ModifierItems
  modifierItems ModifierItem[]

  @@map("tbl_Modifier")
}

model ModifierItem {
  tblModifierItemId Int       @id @default(autoincrement()) @map("tbl_Modifier_Item_Id")
  tblModifierId     Int       @map("tbl_Modifier_Id")
  name              String    @map("Name")
  labelName         String    @map("label_name")
  colorCode         String?   @map("color_code")
  price             Decimal   @map("Price")
  isSyncSqlserver   Int?      @map("is_sync_sqlserver")
  storeCode         String?   @map("Store_code")

  // Relationship to Modifier
  modifier Modifier @relation(fields: [tblModifierId], references: [tblModifierId])

  @@map("tbl_Modifier_Item")
}

model MenuItemModifier {
  menuItemModifierId Int       @id @default(autoincrement()) @map("menu_item_modifier_id")
  tblMenuItemId      Int       @map("tbl_Menu_Item_Id")
  tblModifierId      Int       @map("tbl_Modifier_Id")
  isSyncSqlserver    Int?      @map("is_sync_sqlserver")
  storeCode          String?   @map("Store_code")

  @@map("tbl_menu_item_modifier")
}

model Tax {
  tblTaxId        Int      @id @default(autoincrement()) @map("tbl_tax_id")
  taxname         String   @map("taxname") @db.VarChar(30)
  taxrate         Decimal  @map("taxrate") @db.Decimal(22, 2) @default(0.00)
  createdBy       Int?     @map("created_by")
  createdDate     DateTime @default(now()) @map("created_date")
  isSyncSqlserver Int      @default(0) @map("is_sync_sqlserver")
  storeCode       String?  @map("Store_code") @db.VarChar(100)

  @@map("tbl_tax")
}

model Shift {
  tblShiftId     Int       @id @default(autoincrement()) @map("tbl_shift_id")
  shiftId        Int?      @map("Shiftid")
  batchId        Int?      @map("batchid")
  shiftStart     DateTime? @map("ShiftStart")
  shiftEnd       DateTime? @map("ShiftEnd")
  shiftNumber    Int?      @map("shiftnumber")
  employeeId     Int?      @map("employeeid")
  isOpen         Int       @default(1) @map("isopen")
  stationId      Int?      @map("stationid")
  employeeUserId String?   @map("EmployeeUserID") @db.VarChar(20)
  isSyncMysql    Int?      @map("is_sync_mysql")
  storeCode      String?   @map("Store_code") @db.VarChar(100)

  @@map("tbl_shift")
}

model Printer {
  printerId     Int       @id @default(autoincrement()) @map("printer_id")
  printerCode   String?   @unique @map("printer_code") @db.VarChar(100)
  printerName   String?   @map("printer_name") @db.VarChar(200)
  isActive      Int?      @map("is_active")
  createdBy     Int?      @map("createdby")
  createdOn     DateTime  @default(now()) @map("createdon")
  isSyncMysql   Int?      @map("is_sync_mysql")
  storeCode     String?   @map("Store_code") @db.VarChar(100)

  @@map("tbl_printer")
}

// Enums
enum UserRole {
  SUPER_ADMIN
  OUTLET_MANAGER
  CAPTAIN
  CASHIER
  KITCHEN_STAFF
}

enum DayName {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
  AllDays
}
